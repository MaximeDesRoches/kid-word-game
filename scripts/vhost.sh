#!/bin/bash

project=wordgame
branch=$(git symbolic-ref --short HEAD)

env=local
if [ "$2" = "dev" ]; then
	env="dev"
fi

if [ "$2" = "staging" ]; then
	env="staging"
fi

suggested_site_name="${project}.${branch}.${env}.enclos.ca"

force="0"
if [ "$1" = "force" ]; then
	force="1"
fi

php=7.4

site="${suggested_site_name}"
vhost_root="dist"

# read -r  -p "Enter a domain for this site: " -i "$suggested_site_name" -e site
# read -r  -p "Enter a DocumentRoot : " -i "dist" -e vhost_root

vhost_root_public_html="$(echo $vhost_root | sed 's/dist/public_html/')"

other_aliases_vhost=""
other_aliases_certbot=""

if [ -f ./scripts/devops/aliases.sh ]; then
	echo Loading other aliases...
	. ./scripts/devops/aliases.sh
fi

if [ -f ./scripts/devops/hosts.sh ]; then
    if [ "${env}" = "local" ]; then
		echo Updating /etc/hosts...
		. ./scripts/devops/hosts.sh
	fi
fi

if [ -f ./scripts/devops/ssl.sh ]; then
	echo Copying SSL related files from ${env}.enclos.ca...
	. ./scripts/devops/ssl.sh
fi

if [ "${env}" = "local" ]; then
	echo Adding vhost...
	host="# Generated by vhost.sh
<VirtualHost *:80>
	ServerName $site
	${other_aliases_vhost}
	DocumentRoot \"$(pwd)/$vhost_root\"
	<Directory \"$(pwd)/$vhost_root\">
		AllowOverride All
	</Directory>
</VirtualHost>
<VirtualHost *:443>
	ServerName $site
	${other_aliases_vhost}
	DocumentRoot \"$(pwd)/$vhost_root\"
	<Directory \"$(pwd)/$vhost_root\">
		AllowOverride All
	</Directory>
	Include \"$(pwd)/.ssl/${branch}/options-ssl-apache.conf\"
	SSLCertificateFile \"$(pwd)/.ssl/${branch}/fullchain.pem\"
	SSLCertificateKeyFile \"$(pwd)/.ssl/${branch}/privkey.pem\"
</VirtualHost>";
	echo "$host" | sudo tee /etc/apache2/sites-available/"$site".conf > /dev/null

	echo Enabling site...
	sudo rm -f /etc/apache2/sites-enabled/"$site".conf
	sudo ln -s /etc/apache2/sites-available/"$site".conf /etc/apache2/sites-enabled/

	echo Restarting apache2...
	if [ -f service ]; then
		sudo service apache2 restart > /dev/null
	else
		sudo apachectl -k restart
	fi
fi

echo Done! Try it out! : https://"$site"
